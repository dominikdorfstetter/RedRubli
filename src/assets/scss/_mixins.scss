/* Third party mixins */
@import '_css3-mixins';
@import '_cssowl';

/* Stellt Hardware-Beschleunigung an */
@mixin hardware($backface: true, $perspective: 1000) {
    @if $backface {
        backface-visibility: hidden;
    }
    perspective: $perspective;
}

/* Der höchste z-Index */
.site-header {
    z-index: z('site-header');
}

@function z($name) {
    @if index($z-indexes, $name) {
        @return (length($z-indexes) - index($z-indexes, $name)) + 1;
    } @else {
        @warn 'There is no item "#{$name}" in this list; choose one of: #{$z-indexes}';
        @return null;
    }
}

$prefixes: -webkit-, -moz-, -o-, "";

@mixin borderRadius($size...) {
  @if length($size) == 1 {
      @each $prefix in $prefixes {
          #{$prefix}border-radius: $size;
      }
  } @else {
      @include customBorderRadius($size...);
  }
}


$z-indexes: (
    "outdated-browser",
    "modal",
    "site-header",
    "page-wrapper",
    "site-footer"
);

/* Breakpoints für unterschiedliche Bildschirmgrößen */
/* LARGE */
@mixin bp-large {
  @media only screen and (max-width: 60em) {
    @content;
  }
}

/* MEDIUM */
@mixin bp-medium {
  @media only screen and (max-width: 40em) {
    @content;
  }
}

/* SMALL */
@mixin bp-small {
  @media only screen and (max-width: 30em) {
    @content;
  }
}

/* Ein Platzhalter für Input-Felder */
@mixin input-placeholder {
    &.placeholder { @content; }
    &:-moz-placeholder { @content; }
    &::-moz-placeholder { @content; }
    &:-ms-input-placeholder { @content; }
    &::-webkit-input-placeholder { @content; }
}

/* Kann auf ein Element wie Bild etc. gelegt werden um ein bestimmtes Seitenverhältnis beizubehalten */
@mixin responsive-ratio($x,$y, $pseudo: false) {
  $padding: unquote( ( $y / $x ) * 100 + '%' );
  @if $pseudo {
      &:before {
          @include pseudo($pos: relative);
          width: 100%;
          padding-top: $padding;
      }
  } @else {
      padding-top: $padding;
  }
}

/* Create a fontface */
@mixin font-face(
  $name,
  $font-files,
  $eot: false,
  $weight: false,
  $style: false
) {
  $iefont: unquote("#{$eot}?#iefix");
  @font-face {
    font-family: quote($name);
    @if $eot {
      src: font-url($eot);
      $font-files: font-url($iefont) unquote("format('eot')"), $font-files;
    }
    src: $font-files;
    @if $weight {
      font-weight: $weight;
    }
    @if $style {
      font-style: $style;
    }
  }
}

/* Rechnet pt auf rem um */
@function calculateRem($size) {
  $remSize: $size / 16px;
  @return $remSize * 1rem;
}

/* Sets the font-size */
@mixin font-size($size) {
  font-size: $size;
  font-size: calculateRem($size);
}

/* Transition Mixin */
@mixin transition($args...) {
  -webkit-transition: $args;
  -moz-transition: $args;
  -ms-transition: $args;
  -o-transition: $args;
  transition: $args;
}

/* Cross-Browser freundliche Transparenz */
@mixin opacity($opacity) {
  opacity: $opacity;
  $opacity-ie: $opacity * 100;
  filter: alpha(opacity=$opacity-ie); //IE8
}

/* Verstecke ein Element visuell
   USAGE:
  <span class="visually-hidden" ..
*/

%visuallyhidden {
  margin: -1px;
  padding: 0;
  width: 1px;
  height: 1px;
  overflow: hidden;
  clip: rect(0 0 0 0);
  clip: rect(0, 0, 0, 0);
  position: absolute;
}

.visually-hidden {
  @extend %visuallyhidden;
}
